SET hive.support.sql11.reserved.keywords=false;
SET hive.exec.dynamic.partition.mode=nonstrict;
SET hive.exec.parallel=true;
SET hive.exec.compress.output = true;
SET hive.auto.convert.join=false;
SET hive.optimize.bucketmapjoin=true;
SET hive.optimize.bucketmapjoin.sortedmerge=true;
SET hive.vectorized.execution.enabled = true;
SET hive.vectorized.execution.reduce.enabled = true;
SET hive.cli.print.header=true;
SET mapred.output.compression.codec = org.apache.hadoop.io.compress.GzipCodec;
SET mapreduce.reduce.memory.mb=8000;
SET fs.s3a.acl.default = BucketOwnerFullControl;

USE project_meta_datascience;

DROP TABLE IF EXISTS kg_mktg_alert_data;
CREATE TABLE kg_mktg_alert_data
    (
     algorithm STRING, 
     direction STRING, 
     min_delta_from_baseline DOUBLE, 
     correlated_alert_name_1 STRING, 
     correlated_alert_name_2 STRING, 
     category STRING, 
     sub_category STRING, 
     fire_alert_ind STRING, 
     informational_ind STRING, 
     user_name STRING, 
     email_id STRING, 
     slack_channel STRING, 
     summary STRING, 
     refresh_date_time STRING,  
     median8 DOUBLE, 
     std8 DOUBLE, 
     outlier8 INT, 
     median28 DOUBLE,  
     std28 DOUBLE, 
     outlier28 INT, 
     median4 DOUBLE, 
     std4 DOUBLE, 
     outlier4 INT, 
     weekday STRING, 
     file_date STRING, 
     metric_value DOUBLE, 
     alert_ind INT, 
     pos STRING, 
     placement_name STRING, 
     extra_key_1 STRING, 
     extra_key_2 STRING, 
     extra_key_3 STRING
    )
PARTITIONED BY
              (         
               brand STRING, 
               channel STRING, 
               lob STRING, 
               partner STRING, 
               alert_name STRING
              );

GRANT SELECT ON TABLE kg_mktg_alert_data TO ROLE public;
